name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  quality-gates:
    name: Quality Gates
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./closet-react
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: closet-react/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: TypeScript type check
        run: npm run typecheck
      
      - name: ESLint
        run: npm run lint
      
      - name: Prettier check
        run: npx prettier --check "src/**/*.{ts,tsx,css}"
      
      - name: Run unit tests
        run: npm run test -- --run --coverage
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./closet-react/coverage/coverage-final.json
          flags: unittests
          fail_ci_if_error: false
      
      - name: Build
        run: npm run build
      
      - name: Check bundle size
        run: |
          SIZE=$(du -sb dist | cut -f1)
          MAX_SIZE=524288000
          if [ $SIZE -gt $MAX_SIZE ]; then
            echo "‚ùå Bundle size $SIZE exceeds maximum $MAX_SIZE"
            exit 1
          fi
          echo "‚úÖ Bundle size: $SIZE bytes"

  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./closet-react
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: closet-react/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        id: deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./closet-react
          scope: ${{ secrets.VERCEL_ORG_ID }}
      
      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üöÄ Preview Deployment\n\nYour changes have been deployed to preview:\n\nüîó ${{ steps.deploy.outputs.preview-url }}\n\n### Quality Checks\n- ‚úÖ TypeScript: Passed\n- ‚úÖ ESLint: Passed\n- ‚úÖ Tests: Passed\n- ‚úÖ Build: Successful`
            })

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: quality-gates
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        id: deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./closet-react
          scope: ${{ secrets.VERCEL_ORG_ID }}
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## üéÆ Virtual Closet Arcade - Production Release
            
            **Commit:** ${{ github.sha }}
            **Deployed:** ${{ steps.deploy.outputs.preview-url }}
            
            ### Changes
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
